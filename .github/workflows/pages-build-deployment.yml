name: pages-build-deployment

on:
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      build_status: ${{ steps.build-status.outputs.result }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version-file: pyproject.toml

      - name: Cache uv dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/uv
          key: uv-cache-${{ runner.os }}-${{ hashFiles('pyproject.toml') }}
          restore-keys: |
            uv-cache-${{ runner.os }}-

      - name: Install uv
        uses: astral-sh/setup-uv@v5

      - name: Sync dependencies with uv
        run: uv sync

      - name: Build MkDocs site
        run: |
          source .venv/bin/activate
          mkdocs build

      - name: Save build artifact
        uses: actions/upload-artifact@v4
        with:
          name: mkdocs-site
          path: site/

      - name: Set build status output
        id: build-status
        run: echo "result=success" >> $GITHUB_OUTPUT
  
  report-status:
    runs-on: ubuntu-latest
    needs: build
    if: always()
    steps:
      - name: Report build status
        run: echo ${{ needs.build.result }}

  deploy:
    runs-on: ubuntu-latest
    needs: [build, report-status]
    if: ${{ needs.build.result == 'success' }}
    steps:
      - name: Download site artifact
        uses: actions/download-artifact@v4
        with:
          name: mkdocs-site
          path: site
      
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./site
